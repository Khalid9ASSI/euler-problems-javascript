/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
                                                        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

/*

BRUTE FORCE
function fibonacci(num){
    if(num<2){
        return 1
    } else {
         return fibonacci(num-1) + fibonacci(num-2)
    }
}
lim = 4000000
sum = 0
for(i=0; i<lim; i++){
    if(fibonacci(i)%2==0){
        sum+=i
    }
}
console.log(sum)

const lim = 1
var sum = math.bignumber(0)
let fibValues = []
j
for(i=0; i<lim; i++){
    fibValues[i] = null
}
*/
let i = 0
var fibValues = []
var sum = 0
while(sum<4000000){
    if(i<2){
        fibValues[i]= 1
    } else {
        fibValues[i]= fibValues[i-1] + fibValues[i-2]
        if(fibValues[i]%2==0){
            sum+=fibValues[i]
        }
    }
    i++
}
console.log(sum)

// 4613732
// 4613732